body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

@import url('https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

.bread_crumb {
  border-bottom: 2px solid transparent;
  border-image: linear-gradient(0.25turn, #00A762, #072320);
  border-image-slice: 1;
}

.bread_crumb a {
  text-decoration: none;
}

.bread_crumb a:hover,
.bread_crumb a:focus {
  text-decoration: none;
  color: #072320;
}

.navbar {
  background-color: #072320;
  position: sticky;
  top: 0;
  width: 100%;
}

.show_box {
  opacity: 0;
  backdrop-filter: blur(2px);
  transform: translateY(141px);
  transition: transform 600ms ease-in-out, opacity 600ms ease-in-out;
}

.group:hover .show_box {
  opacity: 100;
  transform: translateY(85px);
}

/* sidebar_scrollbar_design */
::-webkit-scrollbar {
  width: 0px;
}

@media only screen and (max-width: 992px) {
  .logindrop {
    --tw-translate-x: -50%;
    left: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

.search_zindex {
  --tw-translate-y: -17%;
}

.bg_img_user {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

@media only screen and (max-width: 640px) {
  .right_shop_btn {
    margin-right: 0px !important;
  }

  .left_shop_btn {
    margin-left: 0px !important;
  }
}

.center_box {
  display: inline-grid;
  justify-content: center;
  align-items: center;
}

/* .category_hover{
  opacity: 0.5;
  transform: translateY(20px);
  transition: all .5s ease-in-out;
  visibility: hidden;
}
.shopclass:hover .category_hover{
  visibility: visible;
  opacity: 1;
  transform: translateY(200);
} */

.imgslide .slick-list .slick-track {
  display: inline-block !important;
}

.zoom-container {
  position: relative;
  overflow: hidden;
}

.zoom-container img {
  transition: transform 0.3s ease;
}

.zoom-container:hover img {
  transform: scale(1.1);
}

/* Add this to your global CSS or a relevant styles file */
.animate-spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/* CSS for sidebar animations */
@keyframes fadeInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes fadeOutLeft {
  from {
    transform: translateX(100%);
    opacity: 1;
  }
  to {
    transform: translateX(0%);
    opacity: 0;
  }
}

.fadeInRight {
  animation: fadeInRight 0.3s forwards;
}

.fadeOutLeft {
  /* animation: fadeOutLeft 0.3s forwards; */
}


.zoom-image {
    display: block;
    opacity: 0; 
    transform: scale(0.8); 
    animation: zoomIn 2s ease-out forwards; 
    transition: transform 0.5s ease, opacity 0.5s ease; 
}

/* Animation keyframes for zoom-in effect */
@keyframes zoomIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Hover effect */
.zoom-image:hover {
    transform: scale(1.1); /* Scale up to 110% on hover */
    opacity: 1; /* Ensure opacity is 1 on hover */
}

.ig_scale {
  display: inline-block;
  overflow: hidden;
}

.ig_scale img {
  transition: transform 0.3s ease;
}

/* Hover effect */
.ig_scale:hover img {
  transform: scale(0.9);
}



.custom-checkbox {
  position: relative;
  display: inline-block;
  width: 20px; /* Set width */
  height: 20px; /* Set height */
  cursor: pointer;
}

.custom-checkbox input {
  opacity: 0; /* Hide the default checkbox */
  position: absolute;
  cursor: pointer;
  height: 0;
  width: 0;
}

.custom-checkbox .checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px; /* Match checkbox height */
  width: 20px; /* Match checkbox width */
  background-color: #eeeeeebf;
  border: 1px solid #4CAF50; /* Default background */
   /*border-radius: 4px; Optional: add border radius */
}

.custom-checkbox input:checked + .checkmark {
  background-color: #072320; 
}

.custom-checkbox .checkmark:after {
  content: "";
  display: none;
}

.custom-checkbox input:checked + .checkmark:after {
  display: block;
}

.custom-checkbox .checkmark:after {
  left: 6px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid white; /* Change to your desired checkmark color */
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.checkmark{display: flex;
justify-content: center;
align-items: center;}

.ReactModal__Overlay {
/* background-color: #000000 !important; */

}